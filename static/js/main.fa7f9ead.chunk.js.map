{"version":3,"sources":["components/common/NavBar.js","services/location.js","components/map/Overlay.js","components/map/EventMarker.js","hooks/useComponentVisible.js","components/map/GeoMap.js","app.js","style/global.js","index.js"],"names":["Container","styled","div","Title","h2","Icon","img","NavBar","src","alt","location","a","Promise","resolve","reject","axios","get","process","fetchedData","data","OpenAptInfo","RESULT","MESSAGE","list","row","parsedList","map","id","APT_CODE","name","APT_NM","latlng","lat","Y_CODE","lng","X_CODE","quantity","Math","floor","random","console","log","error","Wrapper","Name","h3","Distance","span","LeftQuantity","Congestion","p","Overlay","distance","EventMarker","position","initialIsVisible","useState","isComponentVisible","setIsComponentVisible","ref","useRef","handleHideDropdown","event","key","handleClickOutside","current","contains","target","useEffect","document","addEventListener","removeEventListener","useComponentVisible","useMap","image","size","width","height","onClick","marker","panTo","getPosition","LoadingPage","GeoMap","center","errMsg","isLoading","state","setState","setData","loading","setLoading","fetchData","calcDistance","myLat","myLng","targetLat","targetLng","c","cos","asin","sqrt","toFixed","navigator","geolocation","getCurrentPosition","prev","coords","latitude","longitude","err","message","style","level","length","value","App","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa7f9ead.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 10vh;\r\n  background-color: #744aff;\r\n`;\r\nconst Title = styled.h2`\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n`;\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Container>\r\n      <Icon src=\"/img/hamburger-menu.svg\" alt=\"menu\" />\r\n      <Title>반배기</Title>\r\n      <Icon src=\"/img/info-icon.svg\" alt=\"info\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import axios from \"axios\";\r\n\r\nconst apiKey = process.env.REACT_APP_SEOUL_DATA_API;\r\n\r\nconst location = async () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const fetchedData = await axios.get(\r\n        `http://openapi.seoul.go.kr:8088/${apiKey}/json/OpenAptInfo/1/1000/`\r\n      );\r\n\r\n      if (\r\n        fetchedData.data.OpenAptInfo.RESULT.MESSAGE === \"정상 처리되었습니다\"\r\n      ) {\r\n        const list = fetchedData.data.OpenAptInfo.row;\r\n        const parsedList = list.map((list) => {\r\n          const obj = {\r\n            id: list.APT_CODE,\r\n            name: list.APT_NM,\r\n            latlng: { lat: list.Y_CODE, lng: list.X_CODE },\r\n            quantity: Math.floor(Math.random() * 50),\r\n          };\r\n          return obj;\r\n        });\r\n        console.log(parsedList);\r\n        resolve(parsedList);\r\n      } else {\r\n        console.error(fetchedData.data.OpenAptInfo.RESULT.MESSAGE);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\");\r\n    }\r\n  });\r\n};\r\n\r\nexport default location;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  bottom: 0vh;\r\n  width: 100%;\r\n  height: 18vh;\r\n  background-color: #ffffff;\r\n  border-radius: 1.25rem 1.25rem 0 0;\r\n  z-index: 999;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 1.5rem 0 0 1.5rem;\r\n  color: #20124d;\r\n`;\r\n\r\nconst Name = styled.h3`\r\n  margin: 0 0 1rem 0;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Distance = styled.span`\r\n  margin-right: 3rem;\r\n`;\r\n\r\nconst LeftQuantity = styled.span``;\r\n\r\nconst Congestion = styled.p``;\r\n\r\nconst Overlay = ({ name, quantity, distance }) => {\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <Name>{name}</Name>\r\n        <Distance>{distance} km</Distance>\r\n        <LeftQuantity>{quantity} kg / 50 kg</LeftQuantity>\r\n        <Congestion>혼잡도 : 보통</Congestion>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import React from \"react\";\r\nimport { CustomOverlayMap, MapMarker, useMap } from \"react-kakao-maps-sdk\";\r\nimport useComponentVisible from \"../../hooks/useComponentVisible\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nconst EventMarker = ({ position, name, quantity, distance }) => {\r\n  const { ref, isComponentVisible, setIsComponentVisible } =\r\n    useComponentVisible(false);\r\n  const map = useMap();\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      <MapMarker\r\n        position={position}\r\n        image={{\r\n          src: \"/img/trash-icon.svg\",\r\n          size: {\r\n            width: 30,\r\n            height: 30,\r\n          },\r\n        }}\r\n        // @ts-ignore\r\n        onClick={(marker) => {\r\n          setIsComponentVisible(false);\r\n          map.panTo(marker.getPosition());\r\n          setIsComponentVisible(true);\r\n        }}\r\n      />\r\n      {isComponentVisible && (\r\n        <>\r\n          <CustomOverlayMap position={position} />\r\n          <Overlay name={name} quantity={quantity} distance={distance} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventMarker;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function useComponentVisible(initialIsVisible) {\r\n  const [isComponentVisible, setIsComponentVisible] =\r\n    useState(initialIsVisible);\r\n  const ref = useRef(null);\r\n\r\n  const handleHideDropdown = (event) => {\r\n    if (event.key === \"Escape\") {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleHideDropdown, true);\r\n    document.addEventListener(\"click\", handleClickOutside, true);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleHideDropdown, true);\r\n      document.removeEventListener(\"click\", handleClickOutside, true);\r\n    };\r\n  });\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Map } from \"react-kakao-maps-sdk\";\r\nimport styled from \"styled-components\";\r\nimport location from \"../../services/location\";\r\nimport EventMarker from \"./EventMarker\";\r\n\r\nconst LoadingPage = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  text-align: center;\r\n  line-height: 75vh;\r\n  color: #20124d;\r\n  background-color: #ede8ff;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst GeoMap = () => {\r\n  const [state, setState] = useState({\r\n    center: {\r\n      lat: 33.450701,\r\n      lng: 126.570667,\r\n    },\r\n    errMsg: null,\r\n    isLoading: true,\r\n  });\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const data = await location();\r\n    setData(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const calcDistance = (myLat, myLng, targetLat, targetLng) => {\r\n    const p = 0.017453292519943295; // Math.PI / 180\r\n    const c = Math.cos;\r\n    const a =\r\n      0.5 -\r\n      c((targetLat - myLat) * p) / 2 +\r\n      (c(myLat * p) * c(targetLat * p) * (1 - c((targetLng - myLng) * p))) / 2;\r\n\r\n    return (12742 * Math.asin(Math.sqrt(a))).toFixed(2); // 2 * R; R = 6371 km\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setState((prev) => ({\r\n            ...prev,\r\n            center: {\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            },\r\n            isLoading: false,\r\n          }));\r\n        },\r\n        (err) => {\r\n          setState((prev) => ({\r\n            ...prev,\r\n            errMsg: err.message,\r\n            isLoading: false,\r\n          }));\r\n        }\r\n      );\r\n    } else {\r\n      setState((prev) => ({\r\n        ...prev,\r\n        errMsg: \"geolocation을 사용할 수 없어요..\",\r\n        isLoading: false,\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <LoadingPage>로딩 중 입니다</LoadingPage>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Map\r\n        center={state.center}\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n        }}\r\n        level={5}\r\n      >\r\n        {data.length > 0 &&\r\n          data.map((value) => (\r\n            <EventMarker\r\n              key={value.id}\r\n              position={value.latlng}\r\n              name={value.name}\r\n              quantity={value.quantity}\r\n              distance={calcDistance(\r\n                state.center.lat,\r\n                state.center.lng,\r\n                value.latlng.lat,\r\n                value.latlng.lng\r\n              )}\r\n            />\r\n          ))}\r\n      </Map>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeoMap;\r\n","import NavBar from \"./components/common/NavBar\";\nimport GeoMap from \"./components/map/GeoMap\";\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <GeoMap />\n    </>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html, body {\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Sunflower', sans-serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport GlobalStyle from \"./style/global\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}